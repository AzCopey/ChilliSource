import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.library'

//This is taken from https://gist.github.com/eleventigers/e112fd76dd95e8e8ff5b
def getPlatformNdkBuildCommand() {
    def rootDir = project.rootDir
    def localProperties = new File(rootDir, "local.properties")
    if (localProperties.exists()) {
        Properties properties = new Properties()
        localProperties.withInputStream {
            instr -> properties.load(instr)
        }
        def ndkDir = properties.getProperty('ndk.dir')
        if (ndkDir == null) {
            throw new GradleException("The ndk.dir property in local.propeties is not set")
        }
        def ndkBuild = Os.isFamily(Os.FAMILY_WINDOWS) ? "$ndkDir/ndk-build.cmd" : "$ndkDir/ndk-build"
        return ndkBuild
    } else {
        throw new GradleException("The local.properties file does not exist")
    }
}

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            java.srcDirs = ['../../../Source/CSBackend/Platform/Android/Java/']
        }
    }
    sourceSets {
        main {
            jniLibs.srcDir 'src/main/libs'
        }
    }
    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn ndkBuild
    }
    task ndkBuild(type: Exec) {

        commandLine getPlatformNdkBuildCommand(), '-C', file('src/main/jni').absolutePath
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:21.0.3'
    compile 'com.google.android.gms:play-services:6.5.87'
}
